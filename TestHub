-- Test Hub Script
-- This is a LocalScript that should be placed in StarterGui or StarterPlayerScripts

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TestHub"
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Responsive sizing
local BASE_WIDTH = 300
local MIN_WIDTH = 280
local MAX_WIDTH = 400
local TITLE_HEIGHT = 40
local PADDING = 10

local function updateUIScale()
    local screenSize = workspace.CurrentCamera.ViewportSize
    local scaleFactor = math.clamp(screenSize.X / 1920, 0.7, 1.3)
    local width = math.clamp(BASE_WIDTH * scaleFactor, MIN_WIDTH, MAX_WIDTH)
    
    mainFrame.Size = UDim2.new(0, width, 0, isMinimized and TITLE_HEIGHT or originalSize.Y.Offset)
    mainFrame.Position = UDim2.new(0.5, -width/2, 0, 0)
    
    titleLabel.Size = UDim2.new(1, backButton.Visible and -80 or -120, 1, 0)
    titleLabel.Position = UDim2.new(0, backButton.Visible and 40 or 0, 0, 0)
end

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, BASE_WIDTH, 0, TITLE_HEIGHT)
mainFrame.Position = UDim2.new(0.5, -BASE_WIDTH/2, 0, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui
mainFrame.ZIndex = 100

-- UICorner for main frame
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- UIStroke for main frame
local mainStroke = Instance.new("UIStroke")
mainStroke.Thickness = 1
mainStroke.Color = Color3.fromRGB(50, 50, 50)
mainStroke.Transparency = 0.5
mainStroke.Parent = mainFrame

-- UIGradient for main frame
local mainGradient = Instance.new("UIGradient")
mainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 20))
}
mainGradient.Parent = mainFrame

-- Title Frame
local titleFrame = Instance.new("Frame")
titleFrame.Size = UDim2.new(1, 0, 0, TITLE_HEIGHT)
titleFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleFrame.BorderSizePixel = 0
titleFrame.Parent = mainFrame
titleFrame.ZIndex = 101

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = titleFrame

local titleGradient = Instance.new("UIGradient")
titleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 10))
}
titleGradient.Parent = titleFrame

-- Back Button
local backButton = Instance.new("TextButton")
backButton.Size = UDim2.new(0, 40, 1, 0)
backButton.Position = UDim2.new(0, 0, 0, 0)
backButton.BackgroundTransparency = 1
backButton.Text = "←"
backButton.TextColor3 = Color3.fromRGB(200, 200, 200)
backButton.TextSize = 24
backButton.Font = Enum.Font.Gotham
backButton.Visible = false
backButton.Parent = titleFrame
backButton.ZIndex = 102

-- Title Label (Centered)
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -120, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Test Hub"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 24
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Center
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Parent = titleFrame
titleLabel.ZIndex = 102

-- Drag Button
local dragButton = Instance.new("TextButton")
dragButton.Size = UDim2.new(0, 40, 1, 0)
dragButton.Position = UDim2.new(1, -80, 0, 0)
dragButton.BackgroundTransparency = 1
dragButton.Text = "☰"
dragButton.TextColor3 = Color3.fromRGB(200, 200, 200)
dragButton.TextSize = 24
dragButton.Font = Enum.Font.Gotham
dragButton.Parent = titleFrame
dragButton.ZIndex = 102

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 40, 1, 0)
minimizeButton.Position = UDim2.new(1, -40, 0, 0)
minimizeButton.BackgroundTransparency = 1
minimizeButton.Text = "↓"
minimizeButton.TextColor3 = Color3.fromRGB(200, 200, 200)
minimizeButton.TextSize = 24
minimizeButton.Font = Enum.Font.Gotham
minimizeButton.Parent = titleFrame
minimizeButton.ZIndex = 102

-- Draggable on dragButton
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 0, startPos.Y.Offset + delta.Y)
end

dragButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

dragButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        update(input)
    end
end)

-- Content Container
local contentContainer = Instance.new("Frame")
contentContainer.Size = UDim2.new(1, 0, 1, -TITLE_HEIGHT)
contentContainer.Position = UDim2.new(0, 0, 0, TITLE_HEIGHT)
contentContainer.BackgroundTransparency = 1
contentContainer.Parent = mainFrame
contentContainer.ZIndex = 100

-- Sections Menu (ScrollingFrame)
local sectionsMenu = Instance.new("ScrollingFrame")
sectionsMenu.Size = UDim2.new(1, 0, 1, 0)
sectionsMenu.BackgroundTransparency = 1
sectionsMenu.BorderSizePixel = 0
sectionsMenu.ScrollBarThickness = 0
sectionsMenu.AutomaticCanvasSize = Enum.AutomaticSize.Y
sectionsMenu.CanvasSize = UDim2.new(0, 0, 0, 0)
sectionsMenu.Parent = contentContainer
sectionsMenu.ZIndex = 100

local sectionsList = Instance.new("UIListLayout")
sectionsList.Padding = UDim.new(0, 5)
sectionsList.SortOrder = Enum.SortOrder.LayoutOrder
sectionsList.Parent = sectionsMenu

local paddingSections = Instance.new("UIPadding")
paddingSections.PaddingLeft = UDim.new(0, PADDING)
paddingSections.PaddingRight = UDim.new(0, PADDING)
paddingSections.PaddingTop = UDim.new(0, 5)
paddingSections.PaddingBottom = UDim.new(0, 5)
paddingSections.Parent = sectionsMenu

-- Function to create section button
local function createSectionButton(name)
    local buttonFrame = Instance.new("TextButton")
    buttonFrame.Size = UDim2.new(1, 0, 0, 40)
    buttonFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    buttonFrame.Text = ""
    buttonFrame.Parent = sectionsMenu

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = buttonFrame

    local buttonLabel = Instance.new("TextLabel")
    buttonLabel.Size = UDim2.new(1, 0, 1, 0)
    buttonLabel.BackgroundTransparency = 1
    buttonLabel.Text = name
    buttonLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
    buttonLabel.TextSize = 18
    buttonLabel.Font = Enum.Font.GothamSemibold
    buttonLabel.TextXAlignment = Enum.TextXAlignment.Left
    buttonLabel.Position = UDim2.new(0, 10, 0, 0)
    buttonLabel.Parent = buttonFrame

    return buttonFrame
end

-- Create section buttons
local mainStuffButton = createSectionButton("Main Stuff")
local settingsButton = createSectionButton("Settings")

-- Destroy button at bottom of sections menu
local destroyFrame = Instance.new("Frame")
destroyFrame.Size = UDim2.new(1, 0, 0, 40)
destroyFrame.BackgroundTransparency = 1
destroyFrame.Parent = sectionsMenu

local destroyLabel = Instance.new("TextLabel")
destroyLabel.Size = UDim2.new(1, 0, 1, 0)
destroyLabel.BackgroundTransparency = 1
destroyLabel.Text = "Destroy TestHub"
destroyLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
destroyLabel.TextSize = 16
destroyLabel.Font = Enum.Font.GothamSemibold
destroyLabel.TextXAlignment = Enum.TextXAlignment.Center
destroyLabel.Parent = destroyFrame

-- Version label under destroy
local versionFooter = Instance.new("TextLabel")
versionFooter.Size = UDim2.new(1, 0, 0, 30)
versionFooter.BackgroundTransparency = 1
versionFooter.Text = "v1.0"
versionFooter.TextColor3 = Color3.fromRGB(150, 150, 150)
versionFooter.TextSize = 14
versionFooter.Font = Enum.Font.Gotham
versionFooter.TextXAlignment = Enum.TextXAlignment.Center
versionFooter.Parent = sectionsMenu

-- Mini Banner Popup (Confirmation)
local banner = Instance.new("Frame")
banner.Size = UDim2.new(0, 260, 0, 50)
banner.Position = UDim2.new(0.5, -130, 0, -60)
banner.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
banner.BorderSizePixel = 0
banner.Visible = false
banner.ZIndex = 200
banner.Parent = screenGui

local bannerCorner = Instance.new("UICorner")
bannerCorner.CornerRadius = UDim.new(0, 8)
bannerCorner.Parent = banner

local bannerStroke = Instance.new("UIStroke")
bannerStroke.Thickness = 1
bannerStroke.Color = Color3.fromRGB(200, 50, 50)
bannerStroke.Transparency = 0.3
bannerStroke.Parent = banner

local bannerMessage = Instance.new("TextLabel")
bannerMessage.Size = UDim2.new(1, -80, 1, 0)
bannerMessage.Position = UDim2.new(0, 10, 0, 0)
bannerMessage.BackgroundTransparency = 1
bannerMessage.Text = "Destroy TestHub?"
bannerMessage.TextColor3 = Color3.fromRGB(255, 255, 255)
bannerMessage.TextSize = 16
bannerMessage.Font = Enum.Font.GothamBold
bannerMessage.TextXAlignment = Enum.TextXAlignment.Left
bannerMessage.Parent = banner

local confirmBtn = Instance.new("TextButton")
confirmBtn.Size = UDim2.new(0, 60, 0, 30)
confirmBtn.Position = UDim2.new(1, -70, 0.5, -15)
confirmBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
confirmBtn.Text = "Yes"
confirmBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
confirmBtn.TextSize = 14
confirmBtn.Font = Enum.Font.GothamBold
confirmBtn.Parent = banner

local confirmCorner = Instance.new("UICorner")
confirmCorner.CornerRadius = UDim.new(0, 6)
confirmCorner.Parent = confirmBtn

local cancelBtn = Instance.new("TextButton")
cancelBtn.Size = UDim2.new(0, 60, 0, 30)
cancelBtn.Position = UDim2.new(1, -70, 0.5, -15)
cancelBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
cancelBtn.Text = "No"
cancelBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
cancelBtn.TextSize = 14
cancelBtn.Font = Enum.Font.GothamBold
cancelBtn.Visible = false
cancelBtn.Parent = banner

local cancelCorner = Instance.new("UICorner")
cancelCorner.CornerRadius = UDim.new(0, 6)
cancelCorner.Parent = cancelBtn

-- Banner animation
local function showBanner()
    banner.Position = UDim2.new(0.5, -130, 0, -60)
    banner.Visible = true
    banner.Transparency = 1
    confirmBtn.Position = UDim2.new(1, -130, 0.5, -15)
    cancelBtn.Position = UDim2.new(1, -70, 0.5, -15)
    cancelBtn.Visible = true
    TweenService:Create(banner, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 0, Position = UDim2.new(0.5, -130, 0, 10)}):Play()
    TweenService:Create(confirmBtn, TweenInfo.new(0.3), {Position = UDim2.new(1, -130, 0.5, -15)}):Play()
    TweenService:Create(cancelBtn, TweenInfo.new(0.3), {Position = UDim2.new(1, -70, 0.5, -15)}):Play()
end

local function hideBanner()
    local tween = TweenService:Create(banner, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {Transparency = 1, Position = UDim2.new(0.5, -130, 0, -60)})
    tween:Play()
    tween.Completed:Connect(function()
        banner.Visible = false
    end)
end

destroyFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        showBanner()
    end
end)

confirmBtn.MouseButton1Click:Connect(function()
    hideBanner()
    local fade = TweenService:Create(mainFrame, TweenInfo.new(0.4), {Transparency = 1})
    fade:Play()
    fade.Completed:Connect(function()
        screenGui:Destroy()
    end)
end)

cancelBtn.MouseButton1Click:Connect(hideBanner)

-- Section Contents
local sectionContents = {}

-- Function to create section content frame (ScrollingFrame)
local function createSectionContent()
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Size = UDim2.new(1, 0, 1, 0)
    contentFrame.BackgroundTransparency = 1
    contentFrame.BorderSizePixel = 0
    contentFrame.ScrollBarThickness = 0
    contentFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    contentFrame.Visible = false
    contentFrame.Parent = contentContainer
    contentFrame.ZIndex = 100

    local contentList = Instance.new("UIListLayout")
    contentList.Padding = UDim.new(0, 5)
    contentList.SortOrder = Enum.SortOrder.LayoutOrder
    contentList.Parent = contentFrame

    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, PADDING)
    padding.PaddingRight = UDim.new(0, PADDING)
    padding.PaddingTop = UDim.new(0, 5)
    padding.PaddingBottom = UDim.new(0, 5)
    padding.Parent = contentFrame

    return contentFrame
end

-- Main Stuff Content
local mainStuffContent = createSectionContent()
sectionContents["Main Stuff"] = mainStuffContent

-- Add content to Main Stuff
createToggle("Test Toggle 1", mainStuffContent)
createToggle("Test Toggle 2", mainStuffContent)
createToggle("Test Toggle 3", mainStuffContent)
createButton("Test button 1", mainStuffContent)
createButton("Test button 2", mainStuffContent)

-- Settings Content
local settingsContent = createSectionContent()
sectionContents["Settings"] = settingsContent

-- Navigation logic
local currentSection = nil
local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local function navigateToSection(sectionName)
    if currentSection == sectionName then return end
    currentSection = sectionName
    titleLabel.Text = sectionName
    titleLabel.Position = UDim2.new(0, 40, 0, 0)
    titleLabel.Size = UDim2.new(1, -80, 1, 0)
    backButton.Visible = true

    -- Animate out sections menu
    TweenService:Create(sectionsMenu, tweenInfo, {Transparency = 1}):Play()
    task.delay(0.3, function()
        sectionsMenu.Visible = false
    end)

    -- Animate in content
    local content = sectionContents[sectionName]
    content.Transparency = 1
    content.Visible = true
    TweenService:Create(content, tweenInfo, {Transparency = 0}):Play()
end

local function navigateBack()
    if not currentSection then return end
    local oldContent = sectionContents[currentSection]

    -- Animate out content
    TweenService:Create(oldContent, tweenInfo, {Transparency = 1}):Play()
    task.delay(0.3, function()
        oldContent.Visible = false
    end)

    -- Animate in sections menu
    sectionsMenu.Visible = true
    sectionsMenu.Transparency = 1
    TweenService:Create(sectionsMenu, tweenInfo, {Transparency = 0}):Play()

    -- Reset title
    currentSection = nil
    titleLabel.Text = "Test Hub"
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.Size = UDim2.new(1, -120, 1, 0)
    backButton.Visible = false
end

-- Connect buttons
mainStuffButton.MouseButton1Click:Connect(function()
    navigateToSection("Main Stuff")
end)

settingsButton.MouseButton1Click:Connect(function()
    navigateToSection("Settings")
end)

backButton.MouseButton1Click:Connect(navigateBack)

-- Minimize/Expand logic
local isMinimized = true
local originalSize = UDim2.new(0, BASE_WIDTH, 0, 300)

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local goal = {}
    if isMinimized then
        minimizeButton.Text = "↓"
        goal.Size = UDim2.new(0, mainFrame.AbsoluteSize.X, 0, TITLE_HEIGHT)
        contentContainer.Visible = false
    else
        minimizeButton.Text = "↑"
        goal.Size = originalSize
        contentContainer.Visible = true
    end
    TweenService:Create(mainFrame, tweenInfo, goal):Play()
end)

-- Loading Label
local loadingLabel = Instance.new("TextLabel")
loadingLabel.Size = UDim2.new(1, 0, 1, 0)
loadingLabel.BackgroundTransparency = 1
loadingLabel.Text = "Loading..."
loadingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingLabel.TextSize = 24
loadingLabel.Font = Enum.Font.GothamBold
loadingLabel.Parent = mainFrame
loadingLabel.ZIndex = 103

-- Intro animation
mainFrame.Transparency = 1
mainFrame.Position = UDim2.new(0.5, -BASE_WIDTH/2, 0, -TITLE_HEIGHT)
local introTween = TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {
    Transparency = 0,
    Position = UDim2.new(0.5, -BASE_WIDTH/2, 0, 0)
})
introTween:Play()

introTween.Completed:Connect(function()
    wait(1)
    local loadingFade = TweenService:Create(loadingLabel, TweenInfo.new(0.3), {TextTransparency = 1})
    loadingFade:Play()
    loadingFade.Completed:Connect(function()
        loadingLabel:Destroy()
    end)
end)

-- Responsive scaling
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateUIScale)
updateUIScale()

-- Open/close with Insert
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Insert then
        screenGui.Enabled = not screenGui.Enabled
    end
end)

-- Initial state
sectionsMenu.Visible = true
sectionsMenu.Transparency = 0
contentContainer.Visible = false
